// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.9;
import "forge-std/Test.sol";
import "forge-std/console2.sol";
import {ERC20} from "openzeppelin-contracts/token/ERC20/ERC20.sol";

import {IL1Governor} from "../interfaces/IL1Governor.sol";
import {IL2Voter} from "../interfaces/IL2Voter.sol";
import {L1Voter} from "../L1Voter.sol";

contract GovernanceERC20 is ERC20 {
    constructor() ERC20("Rollcall", "ROLLCALL") {}

    function mint(address to, uint256 amount) public {
        _mint(to, amount);
    }
}

contract L1Governor {
    bytes32 public queueId;
    uint256[10] public queueVotes;
    L1Voter public voter;

    mapping(bytes32 => IL1Governor.Proposal) internal proposals;

    constructor(address voterAddress) {
        voter = L1Voter(voterAddress);
    }

    function propose(bytes32 id, IL1Governor.Proposal memory p)
        external
    {
        proposals[id] = p;

        voter.propose(address(this),
            id,
            this.sources(),
            this.slots(),
            p.snapshot,
            p.start,
            p.end);
    }

    function proposal(bytes32 id)
        public
        view
        virtual
        returns (IL1Governor.Proposal memory)
    {
        return proposals[id];
    }

    function sources() external pure virtual returns (address[] memory) {
        address[] memory s = new address[](1);
        s[0] = 0x7aE1D57b58fA6411F32948314BadD83583eE0e8C;
        return s;
    }

    function slots() external pure virtual returns (bytes32[] memory) {
        bytes32[] memory s = new bytes32[](1);
        s[0] = bytes32(uint256(0));
        return s;
    }

    function queue(bytes32 id, uint256[10] calldata votes) external virtual {
        queueId = id;
        queueVotes = votes;
    }

    function test() public returns (uint) {
        return 0;
    }
}

contract L1VoterSetup is Test {
    //Vm internal vm = Vm(0x7109709ECfa91a80626fF3989D68f67F5b1DD12D);
    GovernanceERC20 internal token;
    L1Voter internal voter;
    L1Governor internal governor;

    function setUp() public virtual {
        voter = new L1Voter();
        governor = new L1Governor(address(voter));
    }
}

contract L2Voter_Voting is L1VoterSetup {
    bytes32 private id = bytes32(uint256(1));
    uint64 internal bn = uint64(block.number);
    uint64 internal start = bn + 10;
    uint64 internal end = bn + 100;

    function setUp() public override {
        super.setUp();

        vm.warp(block.number);

        governor.propose(
            id,
            IL1Governor.Proposal({
                snapshot: hex"d077c85d25408ee51a05118a39ccc8ab0ae80db65f60a18ea0209960bcfc9e4e",
                start: start,
                end: end,
                executed: false,
                canceled: false
            })
        );

        voter.activate(
            address(governor),
            id,
            hex"f90215a06c677c79f07249f5af85156dc66a33c2d1a2e843ab1ce80f953d0079e780587da01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d493479452bc44d5378309ee2abf1539bf71de1b7d7be3b5a04d65424d564e39f92e231c095100877ebe8bac54776632b75be295d983746127a0a96cac5b975d6c89c3ffb148cf76088be45810ae7950993bcf40a899282a628fa042402e593d83815dda04b367c05dc9bee01b61e9746a05182f2e0537853a5185b90100fd7eee26d7d73ef5f9ac35fdeebd9beddfb878fda816feb8ea97b35937fadfbbb35509fee6ff4ededf5d7fcce25f9952feadfd5ffd7bfdbdbe7e98fc3fbbf3eb3cedcf9797bab5eb5bcbfebeeb3abbf38ef2b437f5d9bbd7bff73f79a07391533f1792b5cf7f5bb59dd435fbede2f9f374f98bb802ff3d5457dcdf52fed8595dff7ee7fa46c3b53fea4b8df1fbf6cae77fed14d7db93b7fd7fa3a4dfeef57936f3dbff1d9e9327f6deb747d6edb517716bc4dbedb77b6a7fe1e2beee3df99455f52cfeef8fff5ff5f3550fe65eebcba7ad694febdfab6f132cfadfbebf632674edbf68ffd311faf02ffeb6e1d1af2ceb47ede9fdf3ebbf6db977f9bfd58bf77f872b1e4e28cf0a9083d4a0048401c9c3808401c9afa08461d358fe8c6e616e6f706f6f6c2e6f7267a0959d62b6259bb2b4fc37375c5c41496c8af646b1248827088b61742fcc8fc567883aabff9550735bc7851cbc487a76",
            hex"f90e37f90e34f90211a0ace0683393fa65a836500367726de537eaf01c0144167cbc683677c96ba8df42a0d78f99814dbc434189a56d14df9dc8f4ab0ef747f2da2e1f30cc72eff8dcf86ca0c885caabd49f5acab72455ec405ff166e889aab046c01e3afe10492649c72334a08f8fa912744fe7d1f33088034e7cb75a2e61313fc59e0d33b2dc5ead96fc3e1aa024da5f344ca4809a38cb6098fb1db76ecedfed033775315594dc446c8a409b5aa05f3202c834b6a346cb647a7352e49f01003e44e63536680120e269ce30d04ab7a0fd7df6d8b821ee6623651b7242e59db0fce86bbe36a1627aa59c74ecedb75b85a0d26cc5fad9973b4610b5711847330359e7bce938c8edbb64c0d41a060e0357f5a003757d01388b256af41e384b37a90eac3d396c359125e7f3de7dd959fd417f46a0774916a1f706db63a9f3894682dcc66811aac05aa99bd98cad6445475c1e5606a0bf3c129eb79cc7dfe7349f8f4a7d13cff3def1185e967ecc671c932976986394a0784433c64bd71e32144983e961c45ccadb67c58d990c97af4a773f04198daf12a0e2d3456b9ac2cf404e7e802e6b992d022484eb03f12058973f7702f2dc0c5c75a0538f488cf68a51e6ec8744bb3b63f6be3d7397fe9a97d7b294ac6275ebd0c710a023cdb85019317522b83194468054bdc3f8b4b25561294908c741b0b5c0f6459ea0da62084f1ce9d271f37fb2b4e921cc0d8aa4be3f40d86574286b2b6c83a5373080f90211a050ef96a9d0214264a728fb72aacd0117359359b2593a23a4c3ea11f4e9a94ef6a048fd38c578b2bc35f37b96e7f6a09b29378f2e7259b04d0ee546e9e72b51620aa01cb98cc6018dc16bc002a1ebadb9650e9bb20eae4114bda552beb511e18ca188a00613ad5dc585e8fdb1c585b9e7b061cbdb86a3b888665f9e74cec6d6fddc2fbea0d302ef04ccbb0be012de45ea55c5022f94f3419fadcabb3546dd8c07befb4e35a007adcf416194b65efa11b40683c564a0a8910b14b1ee1dcefd16aa6e88488715a09f1c78a7bb8f1dfed06d646e5a5be4c94b0a05c2584616db445a4e07d928a63ea0e2bc7b885dc0e7d59b38c004dc0b9f8fd2856d6b3caf5565ee0b8f607abeb3e8a0640562342b8842137ec7a836ee845f33ac569c01f2e4369db67eddc68f78b43da0f89330885daf7742939734cff2872cb91a297fd980a956d6de6e2d7d1d14c543a084331284a7ca49e823bd79208b2ea477cf025950f95085a2511f2f0721bf559da0d4d0bf57f17176d1ab6ea91f654c14acc5c2236ddccbc2ff596d8d96612611b2a02917bd1ffe56666efa5918930b131e29cf31113e51112a2569843d89e1ebc667a016a6d4af52dda35added8e58f0a0312c49fdab14caa84695dc003219541a7b16a03d73a06b5355a287887e3b17cfdae97754b7572189d6597a2b5f426cc2efd642a0a689e73b53a22048748d240a04caab3a92b24aa13e50d243968d14ea4761a44480f90211a0be56858fbdebdb81b95067017ddc33ceb9e32df1fd4862ece8940336ae744dc0a0e5243274228eb856c3c4fcab9ff34ffafe236f044f9ed8250262149f37e4e9faa0d7e5fccfc58ab4a86e1ad8aafd7586cbd6c5f52c48b46e8500c106f88cbf6660a054210e8b00ebf19ccfec880c04e475e8a05f5af17c072bda449f89c78cfadaf4a0fc2fd481b6569015dcc136c3afe1e67831d77ffc20a2ba614e6dd49d3e52cb6fa0dc088781c0596a64cf9fd7ceaa6bf906cad1150b248449836a411a5a929da5c5a0e01313b2738360d14a03ae5a20d562a643c644895533e364b00bb010b00898eda095e06e228fd36cc2878ece64defabc384ea9c891be3dd0210260285c7f5c5727a000d7a2b9a8700db743a58f529df4f618732928809b9c30274faac304507de28ba07a60ebccbda505d3763b07acbd8b0c07cf21196bc69dadd2e0101f708c0fa0caa0030a2cd41a46333dc9f6a80db1b1c411bbbc8c67cb0553c733b01ff7947f4722a0795176c823536428f7483857aed4960e7ffb2aa542adb62f214382eab4202de1a07523340d574fb04a8e79510a0b8af8aebfcbd948e69e3426dab0994f5b33fa47a05b14bb5df540a2db54501dc0976899879fb379fcd930c3082e7008393871d016a05e40cb28bf4679e4452272b5507b8987223a1472e7d292d94b9f39edb940c31da04457ad4c9d7395dcd8a34167bcc0186546554f856faa47ef3a8f42030cb93d8180f90211a0293fc33d0a7ae73581abde554f48182a64e29e00e93971e5ab07cd2aab4cb249a0ddcbdd069a83d24649050d939ae404991cfcd738b4e19d20d000512d7610f2aca020bab48c550cbed57196b07b1ba86f5b431d011f5093d263962a0946077720a5a0fbf4d4ea1e05f83147d41c4b09e9ef9a08b5c3eaa8b2300604cbaadb556c80cea0af7e4ef88868fd0b19c22ee339f77bc48df7861c95e397dbd5187382a53b4ea5a003f64402e8a2a7039fd70b4efaa6dfd62150b7d196bc5bfae9e5c8312ba3b2bfa00a62aa36eda182332a4bacc1156755f7d8e3d31d7ed8c2f6e00a99b19026b839a0402a1649c785ac8cc303100fee4a463dfefee0c8fa9fc6dced62ed1c3977fdd6a0ea718e7ed49c0f72914e9f5450fc79280496a6c0fdb1e5428f4546708e8541c0a05354e08b5b881ae51f6c6e1763e6afd5bcc7737c8b7339bc12a2c8f82320ed55a0db4aac62db2dc62967331737ce86d7be53305b9acc110ea21fbfff04a86d6cd4a0da3c01893043eba883124209448d708325fb68e51333d7251d4c38f2101a4d2fa07757ae4b9a18704f64d5905a8c5aa93e404364702252f8cc22c105462a9cf7c0a0fa8e9f7fd247bc87249afe3f25f02395a9b15b977faf8d2fe2e44dcf59e5cfefa0f8056760f23b5eb9fa26ae97fcea23ce219877b8f8cc3ab534237fa837220c33a01cbcfbcccd850a5578f086790e211867e83fdf966d68105feb591a415f4f796f80f90211a061a293f937efc5ba07be4786393b706a73f91fd2f76428f6f2049d82d61d5e5aa077e4cae27a5e73d9c2cefea1b0734b3333ccc6c2bdfca507b287a0d020f77364a00f8a03be2f999f859826a44d8c9df29a9dcd8d3cc3fe5994d3a6fadd23200366a07c0a23799856e863fefab7df1e59b96889ec2a3dbe2717e2e593afa392c6eba3a0fe91930bfba6f4aa1e9563e8836a119c8b0e57f91ea816d48c2bf8b633548f94a040d885af74792e0d3da574b4252aa381baca17cad269b8bd1c3ce4086576bc37a001c1ccbefd887bda647f106edadf19774d712f9f1f254da5080580349b4871fca0bcb8bf9062b56ca65ad3aef36c332cfe84b062a9c800f677ef8f4186e1c503d4a0c68f106edc71f9de158c2123f57dd61e1149ef889e190174ead2f7fb07dfc62fa0a1d6bc2751174d09ba589f5c9a7044da80f649def4ef5aaca989d5060e4a316ba09edc674e5495bb6cbb1667dd87437de502f7b442ddf7508e21ae969d949c1154a049eec4571432a2877f2b0fc3b2716fefa1a1aab92b7361a51eb32faa16413624a068ded0c820648219e674bd7fbf3c89a986c265e84dc34cbf8923e870f1840626a03f9b43d7c329ff6f2183e21b49916b8a29c7c580736b2cebd2114866b6968f60a094e82982b472da06ed5134d2a84be03f5071e0fca6e80fec3e51b422f6c6d40da06d1e16c2d5f6445b69d4490abc589432131381272864ad919cdd136c6be086ea80f90211a093181bdaddce9bdfe3aca6bef22089b177fab21d6a293cdcfa8bd8a0b5023e4da02be9b0edcfcd302a3ffe0ac6dc0abbce62472802fbbbb58601a3331926889133a0fad5f4c4e918284d54aedae7101e511e6957ff0ea57004507e3ccc2b7b8fe147a0792c045c1c9ec80c89700232b7daef1ee02e9d2b326d120da1aa261e519a8af3a097769fb7bd42db0ed2387f958dc81639085f8313da48c5e346b5a158e4a0db59a0727cedf499df4c1162534a12317279b2d8f6f48541549481bcf0ba7cc24e7d55a0030a8f35c8683b9d45416ec4996c700bdb1577d18f9990d1a4a6bc9e4f3bcee5a0255898d501a024340b97e93f96bb465d4b6059039bb699f27bfeb5fed81c16dba0ec2ce6eb12fbc3218d01cb20fa03a9cd30f10fd46379fd3271980501f62e06e5a0d0ac06af5658ba097c1d7fe28e4d7d9b0b1d4e8172d7ee3272f45132054b2e8aa0d44a51694b70df547bcfbd0363068bc908fc3a32663e268011607d0631e0a32ba0e657292f669136b4c9be296200466911a302fe5e9fce80102e0fab0cd86b0677a0fee728d489e337c36af5bb40887c9747a096eb87cea1233007b28bbe2367622fa09e6f561888dfdb234a0268bf8dae457b1c1a6ec90ca06c314c72ed043a75bcc0a0aa3a0cc29b027a19e5eb8c0361387d30af96dd84d7a9c64064f077e925f6b389a085d6279fe7e4169cd94ebe69adc8396799bf0b2660be819ff7076b18715070d680f90151a073dd408fc29be413006e60f3d60c1bcc313492db69c2c2fcbae62a04d70a6cbba0441a130e5b3344a0c6d4e01e69cdd8c3d54c9427c22df1c21e823bd5238bcedc80a0d7921037f60b8d14fadb7548b4a08207d7ddcc26d84eddb936dd62ca72498ebaa0616b1953ab56f21db0e3e0a8f04422bbdce75bd530e049560426deb7548c9324a0df7498a408a3cb6f416a60eb97bc61cdd31f9f9c1e3d9f2e131c476cca1a64aaa0b4b838d595815f1af27bc520f9054bbe7b8f1ae901d58ceba455a93a02b38fe3a088c2648a34b76ec09c67666bf1b2ff917c97a960dbebd2c8d56ec2b89c5f5d7ba080f002d80dc9f4e682660964f02c4f70fdfb5aeeee5f5651fca75c06f810c37980a0f6d68b8a203434af63aefd6acbce4e627b80e03c11d9c64334d48655f842ee24a02991191455c868799650d6cd4009a21443c9ac2aebedb76d55d9a01811d59a9c8080808080f8669d33269ec9b8f075a4723d27c611ac1c52a464f3516b25e0105a0d1c2210b846f8440180a02cd6bd673f33197205e0656bf034b073abf0695388a5dcd0e99cd3acddb61d60a02cfdfbdd943ec0153ed07b97f03eb765dc11cc79c6f750effcc2d126f93c4b31"
        );
    }

    function testProposalState() public {
        L1Voter.Proposal memory proposal = voter.proposal(
            address(governor),
            id
        );

        assertEq(
            proposal.stateroot,
            hex"4d65424d564e39f92e231c095100877ebe8bac54776632b75be295d983746127",
            "root doesnt match"
        );

        assertEq(uint256(proposal.start), uint256(start), "start doesnt match");
        assertEq(uint256(proposal.end), uint256(end), "end doesnt match");
        assertTrue(!proposal.queue, "queue doesnt match");

        assertEq(
            uint256(voter.state(address(governor), id)),
            uint256(IL2Voter.ProposalState.Active),
            "proposal not active"
        );
    }

    function testCastVote() public {
        vm.warp(start);
        bytes
            memory proof = hex"f9076ef90211a0e15b776b5076420f42091e0ea52061a41b0532d661e56b9c650dd43326399154a0a54dd20d0ffa65778c2ac1b10dce946da7145db552f027484164ab49de67d70da0d284d5ef148e1cc2b69ffc5c48e405ea3fd2e80acf27f0693b53314fd7254edda09c687239a4d76e4d59f0dabd7560835b70a2ab557c07855669bf86db5b88d1cea077b763df13fdb49a5e2ee5bbd211f2b855082d4bdefe1bdce41ffd76baea2073a0d8d5593dcd25fb3760ee95079f833b1ebc7a2dc5bed83ea4645adfc2f37d06d5a0c946bdf3c83852f9b9dc9ef491bb7ce81dd3a2cc4400482c6b8ed448b0094aa4a0468ba9adb68ea7dc489eed78ab94007b7cb7a286ceaa8019c96bb354b8daf5c6a089cc7ebaea39fd716c1dc825999d14e14b3d0c4b77c72397a4044c3967a469b8a0b5fbe3d3c4728239bf67660307995d5fcdf2603d42c64b07180ead886537e413a066bda2b81151c0b3810708dbc6682807e9652677c562805602d9aefdf3c88142a087b8e2220b6ac3d43a88e21d795227ec189c533a36e39004a5d08f0853ebc7aca02fbf70d1641ccabc94043d33c3f373bfb51ec522eb78d3dd81abc5d8f099c0cba0aac43707cded10062968a2cd25beb01e58e757648faec4d475dc7674f2ad034ea0106aef93b0f5a0039f5e198cddbda380900ce922333fe9181a691039a392a61aa0a81bd92e037a831b5a760b88c6111c3025bb99281254838eb9bbf714ba40994e80f90211a0b7979f910ac0340ddd7affbf3fb61fc064a5f75c42403aa087dc491264e9a98da02a9a6ecf508902655d2e6cf11744227ec5cb8a87d22cbf6134a059c0d031f8b3a04f419926ed4e13fb775e402c4b424882097ecdc96af7ad61c589acb71106f376a049131409b8941928e6fee322cb0f68ed40e2be684e059a64ef12b35eea21a227a0171d14f9816848ac1276e9b3752c944dce304616adf62c472b6386313ab024e3a02ae9c09c6273053b6c301d3a56f03ab19c4cd936b20ab3bf1e45e6eea97c5109a0e6f2c24b7840299c0858fdef707cbd73835b9c279a6401f9b0328ed2516d538ba0a6fce4426f5e6e8738862d38ff5b54ea4d8aae00775d444953dd23f867b7f986a06ff69012182563f320eee59a71ce99bc1ee04ccc9020eefb324ae85dd2941432a07c51c45a61470166ec76b4dae619d72561b0d1a8ca434564fc3a5ad2d7610c9aa0dcff68893fd23350e261652d9aea868b20d957f87cdc4a4f5979e20456c2e6e3a05930aec794b1d919962e13b1004715d8889903132f052b4357fdb264327d5bb9a0404f097a57bfe49c9685cc904f8c45dff271c7e0c43c98fc15ff5424aa7bb3c1a0739c2f3ea4839db1a0445f6d229cb59298a0eeca8e2dad0a0eca5beff69c2b4da0341a5497d43ca3d30eaa0fa119f3f5005dfe4ba7b8beb15815cdf7a3b861839ea019f7e661e03121bfc7a539e34d630ed7a90c7e9b3f9cac0f1888191f1d270b1080f90211a0240bf8715ba386c0857f5f66a7f4939f9dd03ce18e34b303cd5f00fc88bb26daa0632775b40d10c8354e6e9850ceb13805b38ef9013c103c76227fb73115bb97eaa00dfea5ae9f9de2b4f2b52bed302059e24abcd9cabfdddd57cdffa2dd3ab0fe5ba0b3674622b3f65635dc588cde4d3ae8c970af51c4e26633579ef3490cd1685f14a0428ad6652dde51b57f14839794fa3e40150a882868a2671a08650a77eb6bf381a0fe10b847711504937c88f350339de028c3554c2a89ceea6a546374ae8c2b3904a0f5817055ef9dda4ed831bfd1bdf5dadf0cf5628934cd01de22b2971b51c80bd3a0627daa0717c8c952f39dcdb0f1080233611d10ff2e65cbec32c709abccbb2661a0a91299e08e2080cea8a99316eebfc165673de9f1df78b136c66c43cfa2591974a0e34bf7636bf24cf00f6b270558f80b3b10d0268297d22cda66c767fc482e0c73a0ddbcd9c49c160c892d78051533d15df32357bf775a4a7e098f787fc3fc61d539a0d1529a51b5d1d2c95c6e832e89caa446b450145dc6c1b357ed3c06b365cd2198a03c618cd96a3c71fc0927bd462a28fa283d417740a310e69538dccb059e0229f9a0c1d3491683680579a1158563e902b5b42142f63e27542c17c34fc558afe0e13ba0f98d4e726ab20c57c5a481eb678dffeb6f94fdd3f45241a13378417a1a15db8fa01a1527c2a6bd7fec49a0085db66c9a215f4403f733f8a5e1fb8fdb2dd04d409e80f8b180808080a0119828a6928210218e9c7625eba53d0600fad1159648ed2333d0b30960c3b123a03c30738990fee2cf2b29589f0b1d53a9b68726a5067d71a1f361845184d0335f808080a036760b66a7d36a9a01969270b95326e9889ea10c106d4cdf796dba6fc1d936db808080a0f1f2bcf80ca5c91e4454b84c340e4089eb395dc995e55e4ef56b29ea1a57db8480a05b66122fed950f85b73218189230ffc9aa391682e19b19015630dc49af9f26cd80f8518080808080a0d87e0b2631f38d6e542df219ee5387e2969dfd016aeaaeb4848c39307b6d2c9a80808080a0046e88e9040d65df7376671c0a695cded7d47bd552dd9cf39c3596b41d97a2e1808080808080eb9e34675593a2afa8fe1ff3e09eaa5b961bbb9be0bca4f89c6f3e3b75c558948b8a9a6c877477891cc6cfac";

        vm.startPrank(0xba740c9035fF3c24A69e0df231149c9cd12BAe07);
        assertEq(
            voter.castVote(
                id,
                0x7aE1D57b58fA6411F32948314BadD83583eE0e8C,
                address(governor),
                proof,
                1
            ),
            729246447279609190207404,
            "incorrect balance"
        );
    }
}
